apply plugin: 'com.android.application'

////引用打包插件
//apply from: "publish/publish.gradle"
//
////配置打包插件
//ApkPublish {
//
//    //配置加固信息
//    jiaGu {
//        jarPath JiaGuJirPath
//        userName JiaGuUserName
//        password JiaGuPassword
//        //outPutPath路径中不能包含中文
//        outPutPath JiaGuOutPath
//    }
//
//    //配置应用信息，在弹窗和而成二维码的时候需要使用
//    apkInfo {
//        appName "PeojectSample"
//        appLogo file("/publish/icon/app_logo.png")
//    }
//
//    //配置Email，如果不需使用，可以将enable设置为false
//    email {
//        smtpServer PublishEmailServer
//        emailAddress PublishEmailAddress
//        emailPassWord PublishEmailPassword
//        enable PublishEmailEnable.toBoolean()
//    }
//
//    //fir服务器，下面可以配置多个
//    fir {
//        //一个fir服务器，"公司fir"是他的名字，只有一个属性apiToken
//        //可以配置多个，只有名字唯一就行。该名字只需要配置为apk中的serverName属性
//        //即可实现自动选择该服务器作为上传服务器
//        fir {
//            apiToken FirApiToken
//        }
//    }
//
//    //蒲公英服务器，下面可以配置多个
//    pgy {
//        //一个蒲公英服务器，"公司pgy"是他的名字，需要两个属性
//        //uKey和apiKey
//        //usePasswordOnInstall 表示安装的时候是否需要密码 值是bool
//        //password  安装需要的密码，值是String
//        //可以配置多个，只有名字唯一就行。该名字只需要配置为apk中的serverName属性
//        //即可实现自动选择该服务器作为上传服务器
//        pgy {
//            uKey PgyUKey
//            apiKey PgyApiKey
//            usePasswordOnInstall PgyUsePasswordOnInstall.toBoolean()
//            password PgyInstallPassword
//        }
//    }
//
//    //配置需要生成的apk文件
//    apk {
//        //配置一个apk文件
//        //“正式版”是它的名字，根据这个名字会生成3个任务
//        //打包正式版，发布正式版，加固正式版
//        //buildType 值是String类型，必须是Android配置下的的buildType中的某给值
//        //flavor  值是flavor ，必须是Android配置下的productFlavors中的某个值，没有的话可以自己建一个
//        //serverName 上传的服务器名称，必须是fir配置下，或pgy配置下 某项的名字
//        //useGitLog 是否使用git日志作为更新日志。true的话会提取最近一条日志作为更新日志
//        //否则更新日志会显示upload by 打包助手
//
//        正式版 {
//            buildType "release"
//            flavor "v_portal"
//            serverName "fir"
//            useGitLog true
//        }
//
//        测试版 {
//            buildType "release"
//            flavor "v_test"
//            serverName "pgy"
//            useGitLog true
//        }
//
//    }
//
//}

android {
    compileSdkVersion rootProject.ext.variable.VERSION_COMPILE
    defaultConfig {
        applicationId rootProject.ext.variable.PACKAGE_ID
        minSdkVersion rootProject.ext.variable.VERSION_MIN_SDK
        targetSdkVersion rootProject.ext.variable.VERSION_TARGET_SDK
        versionCode rootProject.ext.variable.PACKAGE_VCODE
        versionName rootProject.ext.variable.PACKAGE_VNAME

//        multiDexEnabled true
//        vectorDrawables.useSupportLibrary = true
//        flavorDimensions "versionCode"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildFeatures{
        viewBinding =true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    signingConfigs {
        release {
            storeFile file("../wangyuan.jks")
            storePassword "wangyuan"
            keyAlias 'wangyuan'
            keyPassword "wangyuan"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        flavorDimensions "api"
        v_test {
            buildConfigField "String", "HTTP_DOMAIN", '"https://api.xxx.com"'
        }
        v_portal {
            buildConfigField "String", "HTTP_DOMAIN", '"https://api.xxx.com"'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //project dependencies
    implementation project(':business-common')
    if (!rootProject.ext.variable.isModulePackage) {
        implementation project(':module-main')
    }

    //apt
    annotationProcessor rootProject.ext.library["arouter-compiler"]

}
